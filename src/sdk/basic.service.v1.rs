// This file is @generated by prost-build.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SomeServiceData {
    #[prost(string, tag = "1")]
    pub value: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub r#type: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SomeServiceResponse {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub version: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "4")]
    pub data: ::core::option::Option<SomeServiceData>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SomeServiceResponses {
    #[prost(message, repeated, tag = "1")]
    pub responses: ::prost::alloc::vec::Vec<SomeServiceResponse>,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct HelloRequest {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct HelloResponse {
    #[prost(message, optional, tag = "1")]
    pub cloud_event: ::core::option::Option<
        super::super::super::io::cloudevents::v1::CloudEvent,
    >,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct HelloResponseEvent {
    #[prost(string, tag = "1")]
    pub greeting: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct TalkRequest {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct TalkResponse {
    #[prost(string, tag = "1")]
    pub answer: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct BackgroundRequest {
    #[prost(int64, tag = "1")]
    pub processes: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BackgroundResponse {
    #[prost(message, optional, tag = "1")]
    pub cloud_event: ::core::option::Option<
        super::super::super::io::cloudevents::v1::CloudEvent,
    >,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BackgroundResponseEvent {
    #[prost(enumeration = "State", tag = "1")]
    pub state: i32,
    #[prost(message, optional, tag = "2")]
    pub started_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "3")]
    pub completed_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, repeated, tag = "4")]
    pub responses: ::prost::alloc::vec::Vec<SomeServiceResponse>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum State {
    Unspecified = 0,
    Process = 1,
    Complete = 2,
    Error = 3,
    CompleteWithError = 4,
}
impl State {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "STATE_UNSPECIFIED",
            Self::Process => "STATE_PROCESS",
            Self::Complete => "STATE_COMPLETE",
            Self::Error => "STATE_ERROR",
            Self::CompleteWithError => "STATE_COMPLETE_WITH_ERROR",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "STATE_UNSPECIFIED" => Some(Self::Unspecified),
            "STATE_PROCESS" => Some(Self::Process),
            "STATE_COMPLETE" => Some(Self::Complete),
            "STATE_ERROR" => Some(Self::Error),
            "STATE_COMPLETE_WITH_ERROR" => Some(Self::CompleteWithError),
            _ => None,
        }
    }
}
